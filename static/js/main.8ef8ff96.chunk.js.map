{"version":3,"sources":["font/PokemonGb-RAeo.ttf","components/searchbox.component.jsx","components/sprite-container.component.jsx","components/carousel.component.jsx","components/pokemonDescriptionContainer.component.jsx","App.js","utils/fetchPokemon.js","utils/pokeApiEnpoint.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBox","handleChange","handleFetch","TextField","label","type","InputProps","startAdornment","InputAdornment","IconButton","onClick","onChange","fullWidth","SpriteContainer","spriteUrl","name","src","style","height","alt","ImageCarousel","sprites","malePokemon","front","undefined","back","frontShiny","backShiny","femalePokemon","sprite","CarouselItem","counter","imageSrc","push","key","length","PokemonDescriptionContainer","speciesData","Object","keys","constructor","descriptionArray","flavor_text_entries","filter","textData","language","lastDescription","Box","p","className","flavor_text","trim","App","searchData","state","searchTerm","fetch","then","response","json","data","setState","pokemonData","handleSpeciesFetch","url","pokemonSpeciesUrl","prevProps","prevState","this","species","Container","paddingTop","Grid","pt","container","spacing","item","xs","sm","Card","CardContent","e","target","value","toLowerCase","textAlign","CardHeader","title","charAt","toUpperCase","slice","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"yKAAAA,EAAOC,QAAU,IAA0B,4C,oNCwB5BC,EApBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,YAAjB,OACd,6BACI,kBAACC,EAAA,EAAD,CACIC,MAAM,oBACNC,KAAK,SACLC,WAAY,CACRC,eACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAUR,GAClB,kBAAC,IAAD,SAKhBS,SAAWV,EACXW,WAAS,M,kBCXNC,EANS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAd,OACpB,6BACI,yBAAKC,IAAKF,EAAWG,MAAO,CAAEC,OAAQ,SAAWC,IAAKJ,MCyF/CK,EAxFO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASN,EAAW,EAAXA,KAExBO,EAAc,CAChBC,WAAOC,EACPC,UAAMD,EACNE,gBAAYF,EACZG,eAAWH,GAETI,EAAgB,CAClBL,WAAOC,EACPC,UAAMD,EACNE,gBAAYF,EACZG,eAAWH,GAGf,IAAK,IAAMK,KAAUR,EAEjB,OAAOQ,GACH,IAAK,eACDP,EAAYG,KAAOJ,EAAQQ,GAC3B,MAEJ,IAAK,cACDD,EAAcH,KAAOJ,EAAQQ,GAC7B,MAEJ,IAAK,aACDP,EAAYK,UAAYN,EAAQQ,GAChC,MAEJ,IAAK,oBACDD,EAAcD,UAAYN,EAAQQ,GAClC,MAEJ,IAAK,gBACDP,EAAYC,MAAQF,EAAQQ,GAC5B,MAEJ,IAAK,eACDD,EAAcL,MAAQF,EAAQQ,GAC9B,MAEJ,IAAK,cACDP,EAAYI,WAAaL,EAAQQ,GACjC,MAEJ,IAAK,qBACDD,EAAcF,WAAaL,EAAQQ,GAQ/C,IAAMC,EAAe,GAEjBC,EAAU,EACd,IAAK,IAAMC,KAAYV,EAChBA,EAAYU,KACXF,EAAaG,KACT,kBAAC,EAAD,CAAiBC,IAAKH,EAASjB,UAAYQ,EAAYU,GAAYjB,KAAOA,KAE9EgB,KAIR,IAAK,IAAMC,KAAYJ,EAChBA,EAAcI,KACbF,EAAaG,KACT,kBAAC,EAAD,CAAiBC,IAAKH,EAASjB,UAAYc,EAAcI,GAAYjB,KAAOA,KAEhFgB,KAIR,OAA2B,IAAxBD,EAAaK,OACL,8BAKP,kBAAC,IAAD,KACML,I,SC/DCM,G,OApBqB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEnC,GAAuC,IAApCC,OAAOC,KAAKF,GAAaF,QAAgBE,EAAYG,cAAgBF,OACpE,OAAO,8BAGX,IAAMG,EAAmBJ,EAAYK,oBACZC,QAAO,SAAAC,GAAQ,MAA+B,OAA3BA,EAASC,SAAS9B,QAExD+B,EAAkBL,EAAiBA,EAAiBN,OAAS,GAEnE,OACI,6BACG,kBAACY,EAAA,EAAD,CAAKC,EAAG,GACP,uBAAGC,UAAW,uBAAyBH,EAAgBI,YAAYC,YCgDhEC,E,kDAzDb,aAAe,IAAD,8BACZ,gBASFlD,YAAc,kBClBemD,EDmBZ,EAAKC,MAAMC,WClBNC,MAAM,GAAD,OCHA,oCDGA,YAAqBH,IACzBI,MAAK,SAAAC,GAAQ,OAAKA,EAASC,WDkB/CF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEC,YAAaF,OCpBjB,IAACP,GDQf,EAedU,mBAAqB,SAACC,GAAD,OChBWC,EDiBZD,EChBER,MAAMS,GACLR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDgB9CF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAExB,YAAauB,OClBd,IAACK,GDI9B,EAAKX,MAAQ,CACXC,WAAa,GACbO,YAAc,GACdzB,YAAa,IANH,E,+DAoBM6B,EAAWC,GAC7B,GAAGA,EAAUL,cAAgBM,KAAKd,MAAMQ,YAAa,CAAC,IAC5CO,EAAYD,KAAKd,MAAMQ,YAAvBO,QACRD,KAAKL,mBAAmBM,EAAQL,Q,+BAIzB,IAAD,SACyCI,KAAKd,MAA9CC,EADA,EACAA,WAAYO,EADZ,EACYA,YAAazB,EADzB,EACyBA,YACzBtB,EAAkB+C,EAAlB/C,KAAMM,EAAYyC,EAAZzC,QACd,OACE,6BACE,kBAACiD,EAAA,EAAD,CAAWrD,MAAO,CAACsD,WAAY,SAC7B,kBAACC,EAAA,EAAD,CAAMC,GAAI,EAAGC,WAAS,EAACC,QAAS,GAC9B,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG7D,MAAO,CAAEC,OAAQ,SACzC,kBAAC6D,EAAA,EAAD,CAAM9D,MAAO,CAAEC,OAAQ,UACnB,kBAAC8D,EAAA,EAAD,KACE,kBAAC,EAAD,CAAW9E,YAAckE,KAAKlE,YAAcqD,WAAYA,EAAYtD,aAAc,SAAAgF,GAAC,OAAK,EAAKpB,SAAS,CAAEN,WAAY0B,EAAEC,OAAOC,MAAMC,mBACnI,kBAAC,EAAD,CAA6B/C,YAAaA,OAIlD,kBAACmC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,CAAM9D,MAAO,CAAEoE,UAAW,SAAUnE,OAAQ,UAC1C,kBAACoE,EAAA,EAAD,CAAYC,MAASxE,EAAmBA,EAAKyE,OAAO,GAAGC,cAAgB1E,EAAK2E,MAAM,GAAtD,YAC1B,kBAACV,EAAA,EAAD,KACE,kBAAC,EAAD,CAAe3D,QAASA,EAASN,KAAOA,c,GA/C1C4E,IAAMC,W,OGGJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhD,MAAK,SAAAiD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8ef8ff96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PokemonGb-RAeo.831e1f4d.ttf\";","import React from 'react';\r\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\n\r\nconst SearchBox = ({ handleChange, handleFetch }) => (\r\n    <div>\r\n        <TextField \r\n            label='Buscar por nombre' \r\n            type='search' \r\n            InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment>\r\n                        <IconButton onClick={ handleFetch }>\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                )\r\n            }}\r\n            onChange={ handleChange }\r\n            fullWidth\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst SpriteContainer = ({ spriteUrl, name }) => (\r\n    <div>\r\n        <img src={spriteUrl} style={{ height: '150px' }} alt={name} />\r\n    </div>\r\n);\r\n\r\nexport default SpriteContainer","import React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\n\r\nimport SpriteContainer from './sprite-container.component'\r\n\r\nconst ImageCarousel = ({ sprites, name }) => {\r\n\r\n    const malePokemon = {\r\n        front: undefined,\r\n        back: undefined,\r\n        frontShiny: undefined,\r\n        backShiny: undefined\r\n    };\r\n    const femalePokemon = {\r\n        front: undefined,\r\n        back: undefined,\r\n        frontShiny: undefined,\r\n        backShiny: undefined\r\n    };\r\n\r\n    for (const sprite in sprites) {\r\n        \r\n        switch(sprite) {\r\n            case 'back_default':\r\n                malePokemon.back = sprites[sprite];\r\n                break;\r\n\r\n            case 'back_female':\r\n                femalePokemon.back = sprites[sprite];\r\n                break;\r\n\r\n            case 'back_shiny':\r\n                malePokemon.backShiny = sprites[sprite];\r\n                break;\r\n\r\n            case 'back_shiny_female':\r\n                femalePokemon.backShiny = sprites[sprite];\r\n                break;\r\n\r\n            case 'front_default':\r\n                malePokemon.front = sprites[sprite];\r\n                break;\r\n\r\n            case 'front_female':\r\n                femalePokemon.front = sprites[sprite];\r\n                break;\r\n\r\n            case 'front_shiny':\r\n                malePokemon.frontShiny = sprites[sprite];\r\n                break;\r\n\r\n            case 'front_shiny_female':\r\n                femalePokemon.frontShiny = sprites[sprite];\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    const CarouselItem = [];\r\n\r\n    let counter = 0;\r\n    for (const imageSrc in malePokemon) {\r\n        if(malePokemon[imageSrc]) {\r\n            CarouselItem.push(\r\n                <SpriteContainer key={counter} spriteUrl={ malePokemon[imageSrc] } name={ name } />\r\n            )\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    for (const imageSrc in femalePokemon) {\r\n        if(femalePokemon[imageSrc]) {\r\n            CarouselItem.push(\r\n                <SpriteContainer key={counter} spriteUrl={ femalePokemon[imageSrc] } name={ name } />\r\n            )\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    if(CarouselItem.length === 0 ) {\r\n        return <div></div>\r\n    }\r\n\r\n\r\n    return (\r\n        <Carousel>\r\n            { CarouselItem }\r\n        </Carousel>\r\n    )\r\n};\r\n\r\nexport default ImageCarousel;","import React from 'react';\r\nimport { Box } from '@material-ui/core'\r\n\r\nimport'./pokemonDescriptionContainer.styles.css';\r\n\r\nconst PokemonDescriptionContainer = ({ speciesData }) => {\r\n\r\n    if(Object.keys(speciesData).length === 0 && speciesData.constructor === Object) {\r\n        return <div></div>\r\n    }\r\n\r\n    const descriptionArray = speciesData.flavor_text_entries\r\n                            .filter(textData => textData.language.name === 'es');\r\n\r\n    const lastDescription = descriptionArray[descriptionArray.length - 1];\r\n    debugger;\r\n    return (\r\n        <div>\r\n           <Box p={2}>\r\n            <p className={\"pokemon-description\"}>{ lastDescription.flavor_text.trim() }</p>\r\n           </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonDescriptionContainer;","import React from 'react';\r\nimport { Container, Grid, Card, CardContent, CardHeader } from '@material-ui/core'\r\n\r\nimport SearchBox from './components/searchbox.component'\r\nimport ImageCarousel from './components/carousel.component'\r\nimport PokemonDescriptionContainer from './components/pokemonDescriptionContainer.component'\r\n\r\nimport { getPokemonData, getPokemonSpecies } from './utils/fetchPokemon'\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      searchTerm : '',\r\n      pokemonData : {},\r\n      speciesData: {}\r\n    }\r\n  }\r\n\r\n  handleFetch = () => (\r\n    getPokemonData(this.state.searchTerm)\r\n    .then(data => this.setState({ pokemonData: data}))\r\n  );\r\n\r\n  handleSpeciesFetch = (url) => (\r\n    getPokemonSpecies(url)\r\n    .then(data => this.setState({ speciesData: data }))\r\n  );\r\n\r\n  componentDidUpdate (prevProps, prevState) {\r\n    if(prevState.pokemonData !== this.state.pokemonData) {\r\n      const { species } = this.state.pokemonData;\r\n      this.handleSpeciesFetch(species.url);\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { searchTerm, pokemonData, speciesData } = this.state;\r\n    const { name, sprites } = pokemonData;\r\n    return (\r\n      <div>\r\n        <Container style={{paddingTop: '20px'}}>\r\n          <Grid pt={4} container spacing={2}>\r\n            <Grid item xs={12} sm={6} style={{ height: '100%' }}>\r\n              <Card style={{ height: '350px'}}  >\r\n                  <CardContent >\r\n                    <SearchBox handleFetch={ this.handleFetch } searchTerm={searchTerm} handleChange={e => (this.setState({ searchTerm: e.target.value.toLowerCase() }))} />\r\n                    <PokemonDescriptionContainer speciesData={speciesData} />\r\n                  </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Card style={{ textAlign: 'center', height: '275px'}}>\r\n                <CardHeader title={ !name ? 'Pokemon' : name.charAt(0).toUpperCase() + name.slice(1) } />\r\n                  <CardContent>\r\n                    <ImageCarousel sprites={sprites} name={ name } />\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { POKE_ENDPOINT } from './pokeApiEnpoint';\r\n\r\nexport const getPokemonData = (searchData) => {\r\n    const fetchResult = fetch(`${POKE_ENDPOINT}/${searchData}`)\r\n                        .then(response => (response.json()));\r\n    \r\n    return fetchResult;\r\n}\r\n\r\nexport const getPokemonSpecies = (pokemonSpeciesUrl) => {\r\n    const fetchResult = fetch(pokemonSpeciesUrl)\r\n                        .then(response => response.json());\r\n\r\n    return fetchResult;\r\n}\r\n","export const POKE_ENDPOINT = 'https://pokeapi.co/api/v2/pokemon';\r\n\r\nexport const POKEDEX_DESCRIPTION_ENDPOINT = 'https://pokeapi.co/api/v2/pokemon-species';\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './font/PokemonGb-RAeo.ttf'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}